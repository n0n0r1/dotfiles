// 既定値を上書きするには、このファイル内にキー バインドを挿入します
[

    // ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    // 無効化するデフォルトキーバインド
    // ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓

    {
        "key": "enter",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "enter",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
    },
    {
        "key": "shift+enter",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "alt+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+space",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+space",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFindWidget",
        "when": "terminalFindWidgetFocused || terminalFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find"
    },
    {
        "key": "ctrl+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "ctrl+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+x",
        "command": "-editor.action.clipboardCutAction",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+x",
        "command": "-workbench.view.extensions"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-toggleExplainMode",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_2",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-workbench.view.explorer"
    },

    // ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    // 有効化するキーバインド
    // ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓
    {
        "key": "enter",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "findInputFocussed || replaceInputFocussed"
    },
    {
        "key": "enter",
        "command": "workbench.action.terminal.hideFindWidget",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "enter",
        "command": "keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "enter",
        "command": "search.focus.nextInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "enter",
        "command": "settings.action.focusSettingsFromSearch",
        "when": "inSettingsSearch && !suggestWidgetVisible"
    },
    {
        "key": "enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorFocus && vim.mode == 'Normal' && !renameInputVisible && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorFocus && vim.mode == 'Normal' && !renameInputVisible && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "shift+;",
        "command": "workbench.action.showCommands",
        "when": "activeEditorGroupEmpty || editorFocus && vim.mode != 'Insert' && !inSettingsSearch && !inKeybindingsSearch && !terminalFocus && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.replaceAll",
        "when": "findWidgetVisible && editorFocus && vim.mode == 'Normal' && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "d d",
        "command": "deleteFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "d d",
        "command": "moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "shift+f",
        "command": "explorer.newFolder",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f",
        "command": "explorer.newFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "p",
        "command": "filesExplorer.paste",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "x",
        "command": "filesExplorer.cut",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "y y",
        "command": "filesExplorer.copy",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": ".",
        "command": "toggleexcludedfiles.toggle",
        "when": "explorerViewletVisible && filesExplorerFocus && !inputFocus"
    },
    {
        "key": "r",
        "command": "renameFile",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "oem_2",
        "command": "actions.find",
        "when": "editorFocus && replaceInputFocussed || editorFocus && !findWidgetVisible || editorFocus && !findInputFocussed && vim.mode != 'Insert'"
    },
    {
        "key": "shift+oem_2",
        "command": "actions.find",
        "when": "editorFocus && replaceInputFocussed || editorFocus && !findWidgetVisible || editorFocus && !findInputFocussed"
    },
    {
        "key": "space c",
        "command": "workbench.action.files.newUntitledFile",
        "when": "activeEditorGroupEmpty && !terminalFocus && !inQuickOpen"
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && replaceInputFocussed"
    },
    {
        "key": "ctrl+c",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.previousEditor",
        "when": "editorFocus && vim.mode == 'Normal' || inSettingsEditor || inKeybindings"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "explorerViewletVisible && openEditorsFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "outline.focus",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+j",
        "command": "search.focus.nextInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+j",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus && findInputFocussed && !terminalFocus"
    },
    {
        "key": "ctrl+j",
        "command": "actions.find",
        "when": "editorFocus && replaceInputFocussed"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.view.search.focus",
        "when": "!inputBoxFocus && searchViewletVisible && sideBarFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "workbench.files.action.focusFilesExplorer",
        "when": "explorerViewletVisible && !filesExplorerFocus && !openEditorsFocus && !inputFocus"
    },
    {
        "key": "ctrl+k",
        "command": "search.action.focusSearchList",
        "when": "inputBoxFocus && searchViewletVisible && searchInputBoxFocus && sideBarFocus"
    },
    {
        "key": "ctrl+k",
        "command": "search.focus.previousInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus && sideBarFocus"
    },
    {
        "key": "ctrl+k",
        "command": "search.action.focusSearchFromResults",
        "when": "!inputBoxFocus && searchViewletVisible && sideBarFocus"
    },
    {
        "key": "ctrl+k",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus && findInputFocussed && !terminalFocus"
    },
    {
        "key": "ctrl+k",
        "command": "actions.find",
        "when": "editorFocus && replaceInputFocussed"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.nextEditor",
        "when": "editorFocus && vim.mode == 'Normal' || inSettingsEditor || inKeybindings"
    },
    {
        "key": "ctrl+l",
        "command": "toggleFindInSelection",
        "when": "editorFocus && findInputFocussed || editorFocus && replaceInputFocussed"
    },
    {
        "key": "ctrl+m",
        "command": "workbench.actions.view.problems"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.nextMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+n",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.terminal.findNext",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.previousMatchFindAction",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.terminal.findPrevious",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+r",
        "command": "toggleFindRegex",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+r",
        "command": "toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "activeEditorGroupEmpty || editorFocus && vim.mode != 'Insert' || terminalFocus || inSettingsSearch || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus && findInputFocussed"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindWidgetFocused"
    },
    {
        "key": "ctrl+w",
        "command": "toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+w h",
        "command": "workbench.action.focusLeftGroup",
        "when": "inSettingsSearch || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+w j",
        "command": "workbench.action.focusBelowGroup",
        "when": "inSettingsSearch || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+w l",
        "command": "workbench.action.focusRightGroup",
        "when": "inSettingsSearch || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.replaceOne",
        "when": "findWidgetVisible && editorFocus && vim.mode == 'Normal' && !findInputFocussed && !replaceInputFocussed"
    },
    {
        "key": "ctrl+;",
        "command": "extension.vim_escape",
        "when": "editorTextFocus && vim.active && !inDebugRepl"
    },
    {
        "key": "ctrl+;",
        "command": "closeFindWidget",
        "when": "editorFocus && findWidgetVisible && vim.mode == 'Normal' && !terminalFocus || findInputFocussed || replaceInputFocussed"
    },
    {
        "key": "ctrl+;",
        "command": "workbench.action.closeQuickOpen",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+;",
        "command": "workbench.action.closeActiveEditor",
        "when": "!editorFocus && !terminalFocus && !inQuickOpen && !sideBarFocus"
    },
    {
        "key": "ctrl+oem_2",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus && findInputFocussed && !terminalFocus"
    },
    {
        "key": "ctrl+oem_2",
        "command": "workbench.action.terminal.focusFindWidget",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+oem_2",
        "command": "settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+oem_2",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+oem_2",
        "command": "problems.action.focusFilter",
        "when": "focusedView == 'workbench.panel.markers.view'"
    },
    {
        "key": "alt+d",
        "command": "targetsContainers.focus"
    },
    {
        "key": "alt+e",
        "command": "workbench.view.explorer",
        "when": "!sideBarFocus"
    },
    {
        "key": "alt+e",
        "command": "workbench.action.closeSidebar",
        "when": "sideBarFocus"
    },
    {
        "key": "alt+h",
        "command": "workbench.action.focusSideBar",
        "when": "!sideBarFocus"
    },
    {
        "key": "alt+j",
        "command": "workbench.action.nextSideBarView"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.previousSideBarView"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.focusLastEditorGroup",
        "when": "sideBarFocus"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.closeSidebar",
        "when": "!sideBarFocus"
    },
    {
        "key": "alt+n",
        "command": "search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "alt+o",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+p",
        "command": "search.action.focusPreviousSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "alt+s",
        "command": "sshHosts.focus"
    },
    {
        "key": "alt+w",
        "command": "targetsWsl.focus"
    },
    {
        "key": "alt+oem_2",
        "command": "workbench.view.search"
    }
]
